{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {\n    path: \"about\",\n    component: AboutComponent \n  },\n  {\n    path: \"\",\n    redirectTo: \"/\",\n    pathMatch: \"full\"\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \".container {\\n    background: rgb(216, 206, 185);\\n}\\n\\n.strike {\\n    text-decoration: line-through;\\n}\"","module.exports = \"<router-outlet></router-outlet>\\n<div class=\\\" container mt-5 border border-info rounded\\\">\\n  <!-- title -->\\n  <h3 class=\\\"text-center p-3 m-5\\\">\\n    Before Relax Time\\n  </h3>\\n  <!-- input chores -->\\n  <div class=\\\"input-group mb-3\\\">\\n      <input [(ngModel)]=\\\"todoInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" (keyup.enter)=\\\"createTodo()\\\" placeholder=\\\"New Chore\\\" aria-label=\\\"New Chore\\\" aria-describedby=\\\"basic-addon2\\\">\\n      <!-- input chore button -->\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"createTodo()\\\"><i class=\\\"fas fa-plus-square\\\"></i></button>\\n      </div>\\n    </div>\\n  <div class=\\\"row mt-5\\\">\\n    <div class=\\\"col\\\">\\n      <!-- todo table list -->\\n      <table class=\\\"table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let todo of todos\\\">\\n            <td>\\n              <!-- <i *ngIf=\\\"todo.isChecked === false\\\" class=\\\"far fa-square\\\"></i>\\n              <i *ngIf=\\\"todo.isChecked === true\\\" class=\\\"far fa-check-square\\\"></i> -->\\n\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"todo.isChecked\\\">\\n              <span [ngClass]=\\\"{'strike': todo.isChecked}\\\"> {{ todo.name }}</span>\\n            </td>\\n            <td class=\\\"text-right\\\"><button (click)=\\\"editTodo(todo)\\\" class=\\\"btn btn-primary\\\">Edit</button></td>\\n            <td>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteTodo(todo)\\\">Delete</button>\\n            </td>\\n          </tr>\\n          <!-- delete all button -->\\n          <tr>\\n            <td>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteAll()\\\">Delete All!</button>\\n            </td>\\n          </tr>\\n         \\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n// const Swal = require('sweetalert2')\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  todoInput: string = \"\";\n\n  todos = [{\n    isChecked: false,\n    name: 'Run in circles'\n  },\n  {\n    isChecked: true,\n    name: 'Kick yourself'\n  },\n  {\n    isChecked: true,\n    name: 'Laugh out loud'\n  }\n  ];\n\n// If using the font awesome checkbox\n  // checkOffTodo(todo) {\n  //   todo.isChecked = !todo.isChecked;\n  // }\n\n  createTodo() {\n    let trimmedInput = this.todoInput.trim();\n    console.log(this.todoInput);\n    if(trimmedInput !=\"\") {\n      this.todos.push({\n        isChecked: false,\n        name: this.todoInput\n      });\n    }\n    // code that will create a todo\n    this.todoInput = \"\";\n\n  }\n\n  editTodo(todo) {\n    // edits the todo\n    // rename that input to whatever I write\n    let index = this.todos.indexOf(todo);\n\n    // to keep comment if hit cancel. before returned null\n    let oldTodo = this.todos[index].name\n    this.todos[index].name = prompt(\"Edit Now\",this.todos[index].name);\n\n    if (this.todos[index].name == null) {\n      // when cancel, put old chore back\n      this.todos[index].name = oldTodo;\n    }\n  }\n\n  deleteTodo(todo) {\n    // deletes todo\n    let index = this.todos.indexOf(todo);\n    this.todos.splice(index, 1);\n    // console.log(this.deleteTodo(todo));\n\n  }\n\n  deleteAll(todo) {\n    this.todos = [];\n    // Need to find how to connect sweetalert2\n    \n    // swal({\n    //   title: 'Sweet!',\n    //   text: 'Modal with a custom image.',\n    //   imageUrl: 'https://unsplash.it/400/200',\n    //   imageWidth: 400,\n    //   imageHeight: 200,\n    //   imageAlt: 'Custom image',\n    //   animation: false\n    // })\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}